<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<?xml-stylesheet type="text/xsl" href="modx.prosilver.en.xsl"?>
<!--For security purposes, please check: https://www.phpbb.com/mods/ for the latest version of this MOD. Although MODs are checked before being allowed in the MODs Database there is no guarantee that there are no security problems within the MOD. No support will be given for MODs not found within the MODs Database which can be found at https://www.phpbb.com/mods/-->
<mod xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="https://www.phpbb.com/mods/xml/modx-1.2.6.xsd">
<header>
	<license>http://opensource.org/licenses/gpl-license.php GNU General Public License v2</license>

	<title lang="en">Advanced Block MOD - Update</title>

	<description lang="en">Update ABM 1.1.3 to 1.1.4</description>

	<author-notes lang="en"></author-notes>

	<author-group>
		<author>
			<realname>Martin Truckenbrodt</realname>
			<username>Martin Truckenbrodt</username>
			<homepage>http://www.martin-truckenbrodt.com</homepage>
		</author>
	</author-group>

	<mod-version>1.1.4</mod-version>

	<installation>
		<level>easy</level>
		<time>120</time>
		<target-version>3.0.11</target-version>
	</installation>

	<history>
		<entry>
			<date>2012-12-24</date>
			<rev-version>1.1.4</rev-version>
			<changelog lang="en">
				<change>MODX 1.2.6</change>
				<change>UMIL 1.0.5</change>
				<change>for performance reasons check_spam for user registration placed before data validation</change>
				<change>for performance reasons check_spam for posting only done if have not not been any errors before</change>
			</changelog>
		</entry>
	</history>
	<link-group>
		<link type="parent" href="../install.xml" lang="en">Advanced Block MOD - Main package</link>
	</link-group>
</header>
<action-group>
	<copy>
		<file from="root/includes/abm/functions.php" to="includes/abm/functions.php" />
		<file from="root/umil_auto_abm.php" to="umil_auto_abm.php" />
	</copy>
	<open src="adm/style/acp_users_overview.html">
		<edit>
			<find><![CDATA[					<!-- IF USER_HAS_POSTS -->
						<select id="delete_type" name="delete_type"><option class="sep" value="">{L_SELECT_OPTION}</option><option value="retain">{L_RETAIN_POSTS}</option><option value="remove">{L_DELETE_POSTS}</option><option value="report_spammer">{L_USER_ADMIN_REPORT_SPAMMER}</option></select></dd>
					<!-- ELSE -->
						{L_USER_NO_POSTS_TO_DELETE}<input type="hidden" id="delete_type" name="delete_type" value="retain" />
					<!-- ENDIF -->]]></find>
			<action type="replace-with"><![CDATA[						<select id="delete_type" name="delete_type">
							<option class="sep" value="">{L_SELECT_OPTION}</option>
						<!-- IF USER_HAS_POSTS -->
							<option value="retain">{L_RETAIN_POSTS}</option>
							<option value="remove">{L_DELETE_POSTS}</option>
						<!-- ELSE -->
							<option class="sep" value="">{L_USER_NO_POSTS_TO_DELETE}</option>
						<!-- ENDIF -->
							<option value="report_spammer">{L_USER_ADMIN_REPORT_SPAMMER}</option>
						</select>
					</dd>]]></action>
		</edit>
	</open>
	<open src="includes/ucp/ucp_register.php">
		<edit>
			<find><![CDATA[			$error = validate_data($data, array(
				'username'			=> array(
					array('string', false, $config['min_name_chars'], $config['max_name_chars']),
					array('username', '')),
				'new_password'		=> array(
					array('string', false, $config['min_pass_chars'], $config['max_pass_chars']),
					array('password')),
				'password_confirm'	=> array('string', false, $config['min_pass_chars'], $config['max_pass_chars']),
				'email'				=> array(
					array('string', false, 6, 60),
					array('email')),
				'email_confirm'		=> array('string', false, 6, 60),
				'tz'				=> array('num', false, -19, 19),
				'lang'				=> array('language_iso_name'),
			));

			if (!check_form_key('ucp_register'))
			{
				$error[] = $user->lang['FORM_INVALID'];
			}

			// Replace "error" strings with their real, localised form
			$error = preg_replace('#^([A-Z_]+)$#e', "(!empty(\$user->lang['\\1'])) ? \$user->lang['\\1'] : '\\1'", $error);

			if ($config['enable_confirm'])
			{
				$vc_response = $captcha->validate($data);
				if ($vc_response !== false)
				{
					$error[] = $vc_response;
				}

				if ($config['max_reg_attempts'] && $captcha->get_attempt_count() > $config['max_reg_attempts'])
				{
					$error[] = $user->lang['TOO_MANY_REGISTERS'];
				}
			}


			/* Advanced Block MOD - feature renamed and moved to ./includes/abm/functions.php
			// DNSBL check
			if ($config['check_dnsbl'])
			{
				if (($dnsbl = $user->check_dnsbl('register')) !== false)
				{
					$error[] = sprintf($user->lang['IP_BLACKLISTED'], $user->ip, $dnsbl[1]);
				}
			}
			*/

			//Advanced Block MOD - check for spam
			$error = array_merge($error, check_spam('user', 'register', $user->ip, 0, 0, $data, false));]]></find>
			<action type="replace-with"><![CDATA[			//Advanced Block MOD - check for spam
			$error = check_spam('user', 'register', $user->ip, 0, 0, $data, false);

			$error = array_merge($error, validate_data($data, array(
				'username'			=> array(
					array('string', false, $config['min_name_chars'], $config['max_name_chars']),
					array('username', '')),
				'new_password'		=> array(
					array('string', false, $config['min_pass_chars'], $config['max_pass_chars']),
					array('password')),
				'password_confirm'	=> array('string', false, $config['min_pass_chars'], $config['max_pass_chars']),
				'email'				=> array(
					array('string', false, 6, 60),
					array('email')),
				'email_confirm'		=> array('string', false, 6, 60),
				'tz'				=> array('num', false, -19, 19),
				'lang'				=> array('language_iso_name'),
			)));

			if (!check_form_key('ucp_register'))
			{
				$error[] = $user->lang['FORM_INVALID'];
			}

			// Replace "error" strings with their real, localised form
			$error = preg_replace('#^([A-Z_]+)$#e', "(!empty(\$user->lang['\\1'])) ? \$user->lang['\\1'] : '\\1'", $error);

			if ($config['enable_confirm'])
			{
				$vc_response = $captcha->validate($data);
				if ($vc_response !== false)
				{
					$error[] = $vc_response;
				}

				if ($config['max_reg_attempts'] && $captcha->get_attempt_count() > $config['max_reg_attempts'])
				{
					$error[] = $user->lang['TOO_MANY_REGISTERS'];
				}
			}

			/* Advanced Block MOD - feature renamed and moved to ./includes/abm/functions.php
			// DNSBL check
			if ($config['check_dnsbl'])
			{
				if (($dnsbl = $user->check_dnsbl('register')) !== false)
				{
					$error[] = sprintf($user->lang['IP_BLACKLISTED'], $user->ip, $dnsbl[1]);
				}
			}
			*/]]></action>
		</edit>
	</open>
	<open src="posting.php">
		<edit>
			<find><![CDATA[	$error = array_merge($error, check_spam('post', 'post', $user->ip, $user->data['user_id'], 0, $post_data, $message_parser));]]></find>
			<action type="replace-with"><![CDATA[	//check it only if there are not any other errors by now
	if (!sizeof($error))
	{
		$error = array_merge($error, check_spam('post', 'post', $user->ip, $user->data['user_id'], 0, $post_data, $message_parser));
	}]]></action>
		</edit>
	</open>
	<php-installer>umil_auto_abm.php</php-installer>
</action-group>
</mod>
